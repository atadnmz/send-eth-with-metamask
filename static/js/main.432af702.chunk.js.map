{"version":3,"sources":["components/send-eth/index.js","utils/web3.js","containers/send-eth/index.js","App.js","index.js"],"names":["index","web3","etherAmount","userAddress","acountBalance","changeEtherAmount","changeUserAddress","onSend","loading","className","style","color","cursor","htmlFor","type","id","border","textOverflow","width","fontFamily","fontSize","value","onChange","e","target","num","fixed","re","RegExp","parseFloat","toString","match","toFixedWithoutRounding","href","rel","length","test","onClick","window","ethereum","request","method","Web3","provider","providers","HttpProvider","SendEthContainer","React","useState","setEtherAmount","balance","setBalance","setUserAddress","setLoading","getMetamaskData","a","eth","getAccounts","address","getBalance","utils","fromWei","alert","isSendValid","enable","sendTransaction","from","to","toWei","formatEtherAmount","message","ether","replace","toLocaleString","useEffect","on","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.432af702.chunk.js","sourcesContent":["import \"./index.css\";\r\n\r\nfunction index({\r\n  etherAmount,\r\n  userAddress,\r\n  acountBalance,\r\n  changeEtherAmount,\r\n  changeUserAddress,\r\n  onSend,\r\n  loading,\r\n}) {\r\n  function toFixedWithoutRounding(num, fixed) {\r\n    const re = new RegExp(\"^-?\\\\d+(?:.\\\\d{0,\" + (fixed || -1) + \"})?\");\r\n    return parseFloat(num.toString().match(re)[0]);\r\n  }\r\n  function onEtherChange(value) {\r\n    const re = /^[0-9]*\\,?[0-9]*$/;\r\n    if ((value === \"\" || re.test(value)) && value.length < 7) {\r\n      changeEtherAmount(value);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"send-eth-component\">\r\n      <header className=\"send-eth-component_header\">\r\n        <span className=\"send-eth-component_icon\">\r\n          <i\r\n            className=\"fa fa-bars\"\r\n            style={{ color: \"white\", cursor: \"pointer\" }}\r\n          />\r\n        </span>\r\n      </header>\r\n      <div className=\"send-eth-component_main-content\">\r\n        <div className=\"send-eth-component_sub-content1\">\r\n          <div className=\"send-eth-component_sub-content1-user-address\">\r\n            <label htmlFor=\"userAddress\">User Address:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"userAddress\"\r\n              style={{\r\n                border: \"0px\",\r\n                textOverflow: \"ellipsis\",\r\n                width: \"50%\",\r\n                fontFamily: \"inherit\",\r\n                fontSize: \"inherit\",\r\n              }}\r\n              value={userAddress}\r\n              onChange={(e) => changeUserAddress(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"send-eth-component_sub-content1-account-balance\">\r\n            <p>Account Balance: </p>\r\n            <p>{toFixedWithoutRounding(acountBalance, 3)}</p>\r\n          </div>\r\n          <a\r\n            className=\"send-eth-component_sub-content1-link\"\r\n            href={`https://rinkeby.etherscan.io/address/${userAddress}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            View account on Etherscan\r\n          </a>\r\n        </div>\r\n        <div className=\"send-eth-component_sub-content2\">\r\n          <div className=\"send-eth-component_sub-content2-send-to-friend\">\r\n            <p>Send to friend</p>\r\n          </div>\r\n          <div className=\"send-eth-component_sub-content2-ether\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"ether\"\r\n              value={etherAmount}\r\n              style={{ width: `${etherAmount.length + 0.1}ch` }}\r\n              onChange={(e) => onEtherChange(e.target.value)}\r\n            ></input>\r\n            <label htmlFor=\"ether\">Ether</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <footer className=\"send-eth-component_footer\" onClick={onSend}>\r\n        {loading ? (\r\n          <div className=\"fa-1x\">\r\n            <i className=\"fas fa-spinner fa-pulse\"></i>\r\n          </div>\r\n        ) : (\r\n          <span>Send</span>\r\n        )}\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default index;\r\n","import Web3 from \"web3\";\r\n\r\nlet web3;\r\n\r\nif (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\r\n  window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  web3 = new Web3(window.ethereum);\r\n} else {\r\n  const provider = new Web3.providers.HttpProvider(\r\n    \"https://rinkeby.infura.io/v3/bfe844f0d4034997bdc3239bdeed3800\"\r\n  );\r\n  web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SendEthComponent from \"../../components/send-eth/index\";\r\nimport web3 from \"../../utils/web3\";\r\n\r\nconst SendEthContainer = () => {\r\n  const [etherAmount, setEtherAmount] = React.useState(0);\r\n  const [balance, setBalance] = useState(0);\r\n  const [userAddress, setUserAddress] = React.useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      getMetamaskData();\r\n      window.ethereum.on(\"accountsChanged\", function () {\r\n        getMetamaskData();\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  async function getMetamaskData() {\r\n    try {\r\n      const address = await web3.eth.getAccounts();\r\n      const balance = await web3.eth.getBalance(address[0]);\r\n\r\n      setBalance(web3.utils.fromWei(balance, \"ether\"));\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  async function sendEther() {\r\n    if (isSendValid()) {\r\n      setLoading(true);\r\n      try {\r\n        if (window.ethereum) {\r\n          await window.ethereum.enable();\r\n        }\r\n        const address = await web3.eth.getAccounts();\r\n        await web3.eth.sendTransaction({\r\n          from: address[0],\r\n          to: userAddress,\r\n          value: web3.utils.toWei(formatEtherAmount(etherAmount), \"ether\"),\r\n        });\r\n        setLoading(false);\r\n        alert(\"transaction done!\");\r\n      } catch (error) {\r\n        setLoading(false);\r\n        alert(error.message);\r\n      }\r\n      getMetamaskData();\r\n    } else {\r\n      alert(\"Error: Please check user address or ether value\");\r\n    }\r\n  }\r\n\r\n  function isSendValid() {\r\n    return userAddress !== \"\" && etherAmount !== \"\";\r\n  }\r\n\r\n  function formatEtherAmount(ether) {\r\n    return ether.replace(\",\", \".\").toLocaleString(\"en-US\");\r\n  }\r\n\r\n  return (\r\n    <SendEthComponent\r\n      etherAmount={etherAmount}\r\n      userAddress={userAddress}\r\n      acountBalance={balance}\r\n      changeEtherAmount={setEtherAmount}\r\n      changeUserAddress={setUserAddress}\r\n      onSend={sendEther}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SendEthContainer;\r\n","import \"./App.css\";\nimport SendEthContainer from \"./containers/send-eth/index\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SendEthContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}