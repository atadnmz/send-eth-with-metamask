{"version":3,"sources":["components/send-eth/index.js","utils/web3.js","containers/send-eth/index.js","App.js","index.js"],"names":["index","web3","etherAmount","userAddress","acountBalance","changeEtherAmount","changeUserAddress","onSend","loading","className","style","color","cursor","htmlFor","type","id","border","textOverflow","width","fontFamily","fontSize","value","onChange","e","target","num","fixed","re","RegExp","parseFloat","toString","match","toFixedWithoutRounding","href","rel","length","test","onClick","window","ethereum","request","method","Web3","provider","providers","HttpProvider","SendEthContainer","React","useState","setEtherAmount","balance","setBalance","setUserAddress","setLoading","getMetamaskData","a","eth","getAccounts","address","getBalance","utils","fromWei","alert","message","isSendValid","enable","sendTransaction","from","to","toWei","formatEtherAmount","ether","replace","toLocaleString","useEffect","on","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86a0c7d3.chunk.js","sourcesContent":["import \"./index.css\";\n\nfunction index({\n  etherAmount,\n  userAddress,\n  acountBalance,\n  changeEtherAmount,\n  changeUserAddress,\n  onSend,\n  loading,\n}) {\n  function toFixedWithoutRounding(num, fixed) {\n    const re = new RegExp(\"^-?\\\\d+(?:.\\\\d{0,\" + (fixed || -1) + \"})?\");\n    return parseFloat(num.toString().match(re)[0]);\n  }\n  function onEtherChange(value) {\n    const re = /^[0-9]*\\,?[0-9]*$/;\n    if ((value === \"\" || re.test(value)) && value.length < 7) {\n      changeEtherAmount(value);\n    }\n  }\n  return (\n    <div className=\"send-eth-component\">\n      <header className=\"send-eth-component_header\">\n        <span className=\"send-eth-component_icon\">\n          <i\n            className=\"fa fa-bars\"\n            style={{ color: \"white\", cursor: \"pointer\" }}\n          />\n        </span>\n      </header>\n      <div className=\"send-eth-component_main-content\">\n        <div className=\"send-eth-component_sub-content1\">\n          <div className=\"send-eth-component_sub-content1-user-address\">\n            <label htmlFor=\"userAddress\">User Address:</label>\n            <input\n              type=\"text\"\n              id=\"userAddress\"\n              style={{\n                border: \"0px\",\n                textOverflow: \"ellipsis\",\n                width: \"50%\",\n                fontFamily: \"inherit\",\n                fontSize: \"inherit\",\n              }}\n              value={userAddress}\n              onChange={(e) => changeUserAddress(e.target.value)}\n            />\n          </div>\n          <div className=\"send-eth-component_sub-content1-account-balance\">\n            <p>Account Balance: </p>\n            <p>{toFixedWithoutRounding(acountBalance, 3)}</p>\n          </div>\n          <a\n            className=\"send-eth-component_sub-content1-link\"\n            href={`https://rinkeby.etherscan.io/address/${userAddress}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            View account on Etherscan\n          </a>\n        </div>\n        <div className=\"send-eth-component_sub-content2\">\n          <div className=\"send-eth-component_sub-content2-send-to-friend\">\n            <p>Send to friend</p>\n          </div>\n          <div className=\"send-eth-component_sub-content2-ether\">\n            <input\n              type=\"text\"\n              id=\"ether\"\n              value={etherAmount}\n              style={{ width: `${etherAmount.length + 0.1}ch` }}\n              onChange={(e) => onEtherChange(e.target.value)}\n            ></input>\n            <label htmlFor=\"ether\">Ether</label>\n          </div>\n        </div>\n      </div>\n      <footer className=\"send-eth-component_footer\" onClick={onSend}>\n        {loading ? (\n          <div className=\"fa-1x\">\n            <i className=\"fas fa-spinner fa-pulse\"></i>\n          </div>\n        ) : (\n          <span>Send</span>\n        )}\n      </footer>\n    </div>\n  );\n}\n\nexport default index;\n","import Web3 from \"web3\";\n\nlet web3;\n\nif (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n  window.ethereum.request({ method: \"eth_requestAccounts\" });\n  web3 = new Web3(window.ethereum);\n} else {\n  const provider = new Web3.providers.HttpProvider(\n    \"https://rinkeby.infura.io/v3/bfe844f0d4034997bdc3239bdeed3800\"\n  );\n  web3 = new Web3(provider);\n}\n\nexport default web3;\n","import React, { useState, useEffect } from \"react\";\nimport SendEthComponent from \"../../components/send-eth/index\";\nimport web3 from \"../../utils/web3\";\n\nconst SendEthContainer = () => {\n  const [etherAmount, setEtherAmount] = React.useState(0);\n  const [balance, setBalance] = useState(0);\n  const [userAddress, setUserAddress] = React.useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", function () {\n        getMetamaskData();\n      });\n    }\n  }, []);\n\n  async function getMetamaskData() {\n    try {\n      const address = await web3.eth.getAccounts();\n      const balance = await web3.eth.getBalance(address[0]);\n\n      setBalance(web3.utils.fromWei(balance, \"ether\"));\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async function sendEther() {\n    if (isSendValid()) {\n      setLoading(true);\n      try {\n        if (window.ethereum) {\n          await window.ethereum.enable();\n        }\n        const address = await web3.eth.getAccounts();\n        await web3.eth.sendTransaction({\n          from: address[0],\n          to: userAddress,\n          value: web3.utils.toWei(formatEtherAmount(etherAmount), \"ether\"),\n        });\n        setLoading(false);\n        alert(\"transaction done!\");\n      } catch (error) {\n        setLoading(false);\n        alert(error.message);\n      }\n      getMetamaskData();\n    } else {\n      alert(\"Error: Please check user address or ether value\");\n    }\n  }\n\n  function isSendValid() {\n    return userAddress !== \"\" && etherAmount !== \"\";\n  }\n\n  function formatEtherAmount(ether) {\n    return ether.replace(\",\", \".\").toLocaleString(\"en-US\");\n  }\n\n  return (\n    <SendEthComponent\n      etherAmount={etherAmount}\n      userAddress={userAddress}\n      acountBalance={balance}\n      changeEtherAmount={setEtherAmount}\n      changeUserAddress={setUserAddress}\n      onSend={sendEther}\n      loading={loading}\n    />\n  );\n};\n\nexport default SendEthContainer;\n","import \"./App.css\";\nimport SendEthContainer from \"./containers/send-eth/index\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SendEthContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}